apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo1-deploy
#  labels:
#    app: test-ingress
spec:
  replicas: 1
  template:
    metadata:
      name: demo1
      labels:
        app: demo1
    spec:
      containers:
        - name: demo1
          image: docker.io/luksa/kubia:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
      restartPolicy: Always
  selector:
    matchLabels:
      app: demo1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo2-deploy
spec:
  replicas: 1
  template:
    metadata:
      name: demo2
      labels:
        app: demo2
    spec:
      containers:
        - name: demo2
          image: docker.io/luksa/kubia:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
      restartPolicy: Always
  selector:
    matchLabels:
      app: demo2
---
apiVersion: v1
kind: Service
metadata:
  name: demo1-svc
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: demo1
---
apiVersion: v1
kind: Service
metadata:
  name: demo2-svc
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: demo2
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: demo-ingress
spec:
  rules:
    - host: demo1.example.com
      http:
        paths:
          - path: /
            backend:
              serviceName: demo1-svc
              servicePort: 80
    - host: demo2.example.com
      http:
        paths:
          - path: /
            backend:
              serviceName: demo2-svc
              servicePort: 80
